#pragma kernel Update

RWStructuredBuffer<float3> _VertexData;
RWStructuredBuffer<float4> _CircleData;
int _Count;
float _Threshold;

float4 CalcData(float2 p1, float2 p0, float2 p2){
    float2 dr0 = p1 - p0; // r_dot_0
    float2 dr1 = p2 - p1; // r_dot_1

    float r0 = dot(p0, p0);
    float r1 = dot(p1, p1);
    float r2 = dot(p2, p2);

    float d = (dr1.x * dr0.y - dr0.x * dr1.y) * 2;

    float x = (  dr1.y * (r0 - r1) - dr0.y * (r2 - r1)) / d;
    float y = (- dr1.x * (r0 - r1) + dr1.x * (r2 - r1)) / d;

    float r = length(p1 - float2(x, y));
    if(1/r < _Threshold){
        return float4(p1.x, p1.y, 0, 0);
    }
    return float4(x, y, 0, r);
}

[numthreads(8,1,1)]
void Update (uint3 id : SV_DispatchThreadID)
{
    uint index = id.x;
    if(index == 0 || index > (uint)(_Count - 1)){
        _CircleData[index] = float4(0,0,0,0);
        return;
    }
    _CircleData[index] = CalcData(_VertexData[index].xy, _VertexData[index - 1].xy, _VertexData[index + 1].xy);
}
